// Mocks generated by Mockito 5.1.0 from annotations
// in weather_challenge/test/search_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:http/http.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:weather_challenge/domain/domain.dart' as _i3;
import 'package:weather_challenge/domain/models/city_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

/// A class which mocks [Domain].
///
/// See the documentation for Mockito's code generation for more information.
class MockDomain extends _i1.Mock implements _i3.Domain {
  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  set client(_i2.Client? _client) =>
      super.noSuchMethod(Invocation.setter(#client, _client),
          returnValueForMissingStub: null);
  @override
  set suggestedCities(List<_i4.CityModel>? _suggestedCities) =>
      super.noSuchMethod(Invocation.setter(#suggestedCities, _suggestedCities),
          returnValueForMissingStub: null);
  @override
  set currentSearchedCity(_i4.WeatherCityModel? _currentSearchedCity) =>
      super.noSuchMethod(
          Invocation.setter(#currentSearchedCity, _currentSearchedCity),
          returnValueForMissingStub: null);
  @override
  set fiveDaysForecastList(List<_i4.WeatherCityModel>? _fiveDaysForecastList) =>
      super.noSuchMethod(
          Invocation.setter(#fiveDaysForecastList, _fiveDaysForecastList),
          returnValueForMissingStub: null);
  @override
  _i5.Future<void> getSuggestedCities(String? name) =>
      (super.noSuchMethod(Invocation.method(#getSuggestedCities, [name]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> getWeatherOfCity(_i4.CityModel? city) =>
      (super.noSuchMethod(Invocation.method(#getWeatherOfCity, [city]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> getForecastOfCity(_i4.CityModel? city) =>
      (super.noSuchMethod(Invocation.method(#getForecastOfCity, [city]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}
